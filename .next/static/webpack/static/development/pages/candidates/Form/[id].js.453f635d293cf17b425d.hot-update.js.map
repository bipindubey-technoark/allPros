{"version":3,"file":"static/webpack/static/development/pages/candidates/Form/[id].js.453f635d293cf17b425d.hot-update.js","sources":["webpack:///./pages/candidates/Form/.jsx"],"sourcesContent":["import {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Grow,\n    Paper,\n    TextField as MuiTextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport Fieldset, { Legend } from \"../../../components/fieldset\";\nimport Layout from \"../../../layout\";\nimport api from \"../../../lib/api\";\nimport { useSnackbar } from \"../../../lib/context\";\nimport CandidatesForm from \"../../../components/forms/CandidatesForm\";\nimport CircularLoader from \"../../../components/loader/CircularLoader\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport TabPanel from \"../../../components/tabs/TabPanel\";\n\nconst useStyles = makeStyles((theme) => ({\n    accountPaper: {\n        padding: 20,\n    },\n    margin: {\n        margin: \"60px 0\",\n    },\n    deleteButton: {\n        color: \"white\",\n        backgroundColor: theme.palette.danger.main,\n        \"&:hover\": {\n            backgroundColor: theme.palette.danger.main,\n        },\n    },\n    dialogActions: {\n        padding: 20,\n    },\n}));\n\nfunction ViewOwner() {\n    const classes = useStyles();\n    const router = useRouter();\n    const [candidate, setCandidate] = useState({\n        id: 1,\n        firstName: \"John\",\n        lastName: \"Smith\",\n        email: \"john@co\",\n        phone: \"987123123\",\n        managerType: \"BOH Manager\",\n        yearsInHospitality:'',\n        currentRole:'',\n        role\n    });\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const { openSnackbar } = useSnackbar();\n    const [selectedtab, setSelectedTab] = useState(\"questionnaire\");\n\n    useEffect(() => {\n        //   const fetchData = async () => {\n        //     const { data } = await api.get(`/Members/${router.query.id}`);\n        //     setMember(data);\n        //   };\n        //   fetchData();\n    }, [router.query.id]);\n\n    function openDialog() {\n        setDialogOpen(true);\n    }\n\n    function handleDialogClose() {\n        setDialogOpen(false);\n    }\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n    // const handleUpdate = async (values, actions) => {\n    //   try {\n    //     await api.put(`/Members`, values);\n    //     openSnackbar('success', 'Member updated.');\n    //     router.push('/Members');\n    //   } catch (error) {\n    //     openSnackbar('error',error.response.data.errors[0]);\n    //     actions.setSubmitting(false);\n    //   }\n    // };\n\n    if (!candidate) {\n        return (\n            <Layout pageName=\"View Candidate\">\n                <CircularLoader />\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout pageName=\"View Candidate\">\n            <Tabs\n                value={selectedtab}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                style={{ backgroundColor: \"#3f0f3f\" }}\n                // centered\n            >\n                <Tab\n                    value=\"questionnaire\"\n                    style={{ color: \"white\" }}\n                    label=\"Questionnaire Form\"\n                />\n                <Tab\n                    value=\"application\"\n                    style={{ color: \"white\" }}\n                    label=\"Application Form\"\n                />\n            </Tabs>\n            <Container>\n                <Paper className={classes.accountPaper}>\n                    <TabPanel value={selectedtab} index=\"questionnaire\">\n                        <Typography variant=\"h5\">Candidate Details</Typography>\n                        <Formik\n                            //   validationSchema={validationSchema}\n                            initialValues={candidate}\n                            //   onSubmit={handleUpdate}\n                            component={CandidatesForm}\n                        />\n                    </TabPanel>\n                    <TabPanel\n                        value={selectedtab}\n                        index=\"application\"\n                    ></TabPanel>\n                </Paper>\n            </Container>\n        </Layout>\n    );\n}\n\nexport default ViewOwner;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AADA;AAdA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAisourceRoot":""}