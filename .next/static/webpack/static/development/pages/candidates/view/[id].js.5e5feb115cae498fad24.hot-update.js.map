{"version":3,"file":"static/webpack/static\\development\\pages\\candidates\\view\\[id].js.5e5feb115cae498fad24.hot-update.js","sources":["webpack:///./pages/candidates/view/.js"],"sourcesContent":["import {\r\n    Button, Container, Dialog, DialogActions, DialogContent, DialogTitle,\r\n    Divider, Grow, Paper, TextField as MuiTextField, Typography,\r\n  } from '@material-ui/core';\r\n  import { makeStyles } from '@material-ui/core/styles';\r\n  import DeleteIcon from '@material-ui/icons/Delete';\r\n  import { Formik } from 'formik';\r\n  import { useRouter } from 'next/router';\r\n  import React, { useState, useEffect } from 'react';\r\n  import * as yup from 'yup';\r\n  import Fieldset, { Legend } from '../../../components/fieldset';\r\n  import Layout from '../../../layout';\r\n  import api from '../../../lib/api';\r\n  import { useSnackbar } from '../../../lib/context';\r\n  import CustomerForm from '../../../components/forms/CustomerForm';\r\n  import CircularLoader from '../../../components/loader/CircularLoader';\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    accountPaper: {\r\n      padding: 20,\r\n    },\r\n    margin: {\r\n      margin: '60px 0',\r\n    },\r\n    deleteButton: {\r\n      color: 'white',\r\n      backgroundColor: theme.palette.danger.main,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.danger.main,\r\n      },\r\n    },\r\n    dialogActions: {\r\n      padding: 20,\r\n    },\r\n  }));\r\n  \r\n  const validationSchema = yup.object().shape({\r\n    companyName: yup.string().required('Company Name is required.'),\r\n    firstName: yup.string().required('First Name is required.'),\r\n    lastName: yup.string().required('Last Country is required.'),\r\n    country: yup.string().required('Country is required.'),\r\n    state: yup.string().required('State is required.'),\r\n    city: yup.string().required('City is required.'),\r\n    zipCode: yup.string().required('Zipcode is required.'),\r\n    address1: yup.string().required('Address 1 is required.'),\r\n    address2: yup.string().required('Address 2 is required.'),\r\n    linkedinUrl: yup.string().url('Invalid url'),\r\n    facebookUrl: yup.string().url('Invalid url'),\r\n    twitterUrl: yup.string().url('Invalid url'),\r\n    website: yup.string().url('Invalid url'),\r\n    currency: yup.string().required('Currency is required.'),\r\n    chartOfAccounts: yup.string().required('Chart of Accounts is required.'),\r\n    companyNumber: yup.string().required('Company Number is required.'),\r\n    taxNumber: yup.string().required('Tax Number is required.'),\r\n  });\r\n  \r\n  function ViewCandidatePage() {\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const { openSnackbar } = useSnackbar();\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const { data } = await api.get(`/customers/${router.query.id}`);\r\n        setCustomer(data);\r\n      };\r\n    //   fetchData();\r\n    }, [router.query.id]);\r\n  \r\n    function openDialog() {\r\n      setDialogOpen(true);\r\n    }\r\n  \r\n    function handleDialogClose() {\r\n      setDialogOpen(false);\r\n    }\r\n  \r\n    const updateCustomerDetails = async (values, actions) => {\r\n      try {\r\n        await api.put(`/customers`, values);\r\n        openSnackbar('success', 'Customer updated.');\r\n        router.push('/customers');\r\n      } catch (error) {\r\n        openSnackbar('error',error.response.data.errors[0]);\r\n        actions.setSubmitting(false);\r\n      }\r\n    };\r\n  \r\n\r\n  \r\n    // if (!customer) {\r\n    //   return <Layout pageName=\"View Candidate\"><CircularLoader /></Layout>\r\n    // }\r\n  \r\n    return (\r\n      <Layout pageName=\"View Candidate\">\r\n        {/* <Dialog\r\n          open={dialogOpen}\r\n          onClose={handleDialogClose}\r\n          TransitionComponent={Grow}\r\n        >\r\n          <DialogTitle>Verification</DialogTitle>\r\n  \r\n          <DialogContent>\r\n            <MuiTextField label=\"OTP\" fullWidth />\r\n          </DialogContent>\r\n          <DialogActions className={classes.dialogActions}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.deleteButton}\r\n              startIcon={<DeleteIcon />}\r\n              onClick={deleteCustomerDetails}\r\n            >\r\n              Confirm\r\n            </Button>\r\n  \r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog> */}\r\n        <Container>\r\n          <Paper className={classes.accountPaper}>\r\n            <Typography variant=\"h5\">Candidates Details</Typography>\r\n  \r\n            \r\n          </Paper>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n  \r\n  export default ViewCandidatePage;\r\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AADA;AAdA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}