{"version":3,"file":"static/webpack/static\\development\\pages\\candidates.js.c126149d0e2037c8cb1e.hot-update.js","sources":["webpack:///./pages/candidates/index.js"],"sourcesContent":["import {\r\n  Box,\r\n  Container,\r\n  IconButton,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Table } from \"../../components/tables\";\r\nimport Layout from \"../../layout\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport api from \"../../lib/api\";\r\nimport CircularLoader from \"../../components/loader/CircularLoader\";\r\n\r\nfunction CandidatesPage() {\r\n  const router = useRouter();\r\n  const [customer, setCustomer] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await api.get(\"/customers\");\r\n      setCustomer(data);\r\n      setIsLoading(false);\r\n    };\r\n    // fetchData();\r\n  }, []);\r\n  const addCustomer = () => {\r\n    router.push(\"/customers/add\");\r\n  };\r\n\r\n  if (!customer) {\r\n    return (\r\n      <Layout pageName=\"Customer\">\r\n        <CircularLoader />\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout pageName=\"Candidates\">\r\n      <Container>\r\n        <Box padding={3} clone>\r\n          <Paper>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              marginBottom={3}\r\n            >\r\n              <Typography variant=\"h5\">Candidates</Typography>\r\n              <IconButton onClick={addCustomer}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Box>\r\n            <Box padding={3} clone>\r\n              <Table\r\n                columns={[\r\n                  { title: \"First Name\", field: \"firstName\" },\r\n                  { title: \"Last Name\", field: \"lastName\" },\r\n                  { title: \"Phone Number\", field: \"phone\" },\r\n                  { title: \"Email\", field: \"email\" },\r\n                ]}\r\n                data={[\r\n                  {\r\n                    firstName: \"John\",\r\n                    lastName: \"Deeee\",\r\n                    email: \"john@co\",\r\n                    contact: \"123123\",\r\n                  },\r\n                  {\r\n                    firstName: \"Cary\",\r\n                    lastName: \"Bow\",\r\n                    email: \"john@co\",\r\n                    contact: \"123123\",\r\n                  },\r\n                ]}\r\n                // data={customer}\r\n                options={{\r\n                  pageSize: 25,\r\n                  pageSizeOptions: [5, 10, 25, 50, 75, 100],\r\n                  toolbar: true,\r\n                  paging: true,\r\n                  actionsColumnIndex: -1,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#3f0f3f\",\r\n                    color: \"#FFF\",\r\n                  },\r\n                }}\r\n                // isLoading={isLoading}\r\n                // data={query =>\r\n                //   new Promise((resolve, reject) => {\r\n                //     // let url = 'https://reqres.in/api/users?'\r\n                //     // url += 'per_page=' + query.pageSize\r\n                //     // url += '&page=' + (query.page + 1)\r\n                //     // fetch(url)\r\n                //     api.get('/customers')\r\n                //       // .then(response => response.json())\r\n                //       .then(result => {\r\n                //         resolve({\r\n                //           data: result.data,\r\n                //           page: result.page - 1,\r\n                //           totalCount: result.total,\r\n                //         })\r\n                //       })\r\n                //   })\r\n                // }\r\n                actions={[\r\n                  {\r\n                    icon: () => <EditIcon color=\"primary\" />,\r\n                    tooltip: \"Edit Customer\",\r\n                    onClick: (event, rowData) => {\r\n                      router.push(\r\n                        `/customers/edit/[id]`,\r\n                        `/customers/edit/${rowData.id}`\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    icon: () => <VisibilityIcon color=\"primary\" />,\r\n                    tooltip: \"View\",\r\n                    onClick: (event, rowData) => {\r\n                      router.push(\"/candidates/view/123\");\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default CandidatesPage;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAdA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAmDA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AARA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AA9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6EA;AACA;AACA;;;;A","sourceRoot":""}