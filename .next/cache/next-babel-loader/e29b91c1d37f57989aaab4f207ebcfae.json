{"ast":null,"code":"var _jsxFileName = \"F:\\\\Shrinath\\\\Technoark\\\\allPros\\\\pages\\\\candidates\\\\view\\\\[id].js\";\nvar __jsx = React.createElement;\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grow, Paper, TextField as MuiTextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Formik } from 'formik';\nimport { useRouter } from 'next/router';\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport Fieldset, { Legend } from '../../../components/fieldset';\nimport Layout from '../../../layout';\nimport api from '../../../lib/api';\nimport { useSnackbar } from '../../../lib/context';\nimport CustomerForm from '../../../components/forms/CustomerForm';\nimport CircularLoader from '../../../components/loader/CircularLoader';\nconst useStyles = makeStyles(theme => ({\n  accountPaper: {\n    padding: 20\n  },\n  margin: {\n    margin: '60px 0'\n  },\n  deleteButton: {\n    color: 'white',\n    backgroundColor: theme.palette.danger.main,\n    '&:hover': {\n      backgroundColor: theme.palette.danger.main\n    }\n  },\n  dialogActions: {\n    padding: 20\n  }\n}));\nconst validationSchema = yup.object().shape({\n  companyName: yup.string().required('Company Name is required.'),\n  firstName: yup.string().required('First Name is required.'),\n  lastName: yup.string().required('Last Country is required.'),\n  country: yup.string().required('Country is required.'),\n  state: yup.string().required('State is required.'),\n  city: yup.string().required('City is required.'),\n  zipCode: yup.string().required('Zipcode is required.'),\n  address1: yup.string().required('Address 1 is required.'),\n  address2: yup.string().required('Address 2 is required.'),\n  linkedinUrl: yup.string().url('Invalid url'),\n  facebookUrl: yup.string().url('Invalid url'),\n  twitterUrl: yup.string().url('Invalid url'),\n  website: yup.string().url('Invalid url'),\n  currency: yup.string().required('Currency is required.'),\n  chartOfAccounts: yup.string().required('Chart of Accounts is required.'),\n  companyNumber: yup.string().required('Company Number is required.'),\n  taxNumber: yup.string().required('Tax Number is required.')\n});\n\nfunction ViewCandidatePage() {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: customer,\n    1: setCustomer\n  } = useState();\n  const {\n    0: dialogOpen,\n    1: setDialogOpen\n  } = useState(false);\n  const {\n    openSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await api.get(`/customers/${router.query.id}`);\n      setCustomer(data);\n    }; //   fetchData();\n\n  }, [router.query.id]);\n\n  function openDialog() {\n    setDialogOpen(true);\n  }\n\n  function handleDialogClose() {\n    setDialogOpen(false);\n  }\n\n  const updateCustomerDetails = async (values, actions) => {\n    try {\n      await api.put(`/customers`, values);\n      openSnackbar('success', 'Customer updated.');\n      router.push('/customers');\n    } catch (error) {\n      openSnackbar('error', error.response.data.errors[0]);\n      actions.setSubmitting(false);\n    }\n  };\n\n  if (!customer) {\n    return __jsx(Layout, {\n      pageName: \"View Candidate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(CircularLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n  return __jsx(Layout, {\n    pageName: \"View Candidate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.accountPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Candidates Details\"))));\n}\n\nexport default ViewCandidatePage;","map":{"version":3,"sources":["F:\\Shrinath\\Technoark\\allPros\\pages\\candidates\\view\\[id].js"],"names":["Button","Container","Dialog","DialogActions","DialogContent","DialogTitle","Divider","Grow","Paper","TextField","MuiTextField","Typography","makeStyles","DeleteIcon","Formik","useRouter","React","useState","useEffect","yup","Fieldset","Legend","Layout","api","useSnackbar","CustomerForm","CircularLoader","useStyles","theme","accountPaper","padding","margin","deleteButton","color","backgroundColor","palette","danger","main","dialogActions","validationSchema","object","shape","companyName","string","required","firstName","lastName","country","state","city","zipCode","address1","address2","linkedinUrl","url","facebookUrl","twitterUrl","website","currency","chartOfAccounts","companyNumber","taxNumber","ViewCandidatePage","classes","router","customer","setCustomer","dialogOpen","setDialogOpen","openSnackbar","fetchData","data","get","query","id","openDialog","handleDialogClose","updateCustomerDetails","values","actions","put","push","error","response","errors","setSubmitting"],"mappings":"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","sourcesContent":["import {\r\n    Button, Container, Dialog, DialogActions, DialogContent, DialogTitle,\r\n    Divider, Grow, Paper, TextField as MuiTextField, Typography,\r\n  } from '@material-ui/core';\r\n  import { makeStyles } from '@material-ui/core/styles';\r\n  import DeleteIcon from '@material-ui/icons/Delete';\r\n  import { Formik } from 'formik';\r\n  import { useRouter } from 'next/router';\r\n  import React, { useState, useEffect } from 'react';\r\n  import * as yup from 'yup';\r\n  import Fieldset, { Legend } from '../../../components/fieldset';\r\n  import Layout from '../../../layout';\r\n  import api from '../../../lib/api';\r\n  import { useSnackbar } from '../../../lib/context';\r\n  import CustomerForm from '../../../components/forms/CustomerForm';\r\n  import CircularLoader from '../../../components/loader/CircularLoader';\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    accountPaper: {\r\n      padding: 20,\r\n    },\r\n    margin: {\r\n      margin: '60px 0',\r\n    },\r\n    deleteButton: {\r\n      color: 'white',\r\n      backgroundColor: theme.palette.danger.main,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.danger.main,\r\n      },\r\n    },\r\n    dialogActions: {\r\n      padding: 20,\r\n    },\r\n  }));\r\n  \r\n  const validationSchema = yup.object().shape({\r\n    companyName: yup.string().required('Company Name is required.'),\r\n    firstName: yup.string().required('First Name is required.'),\r\n    lastName: yup.string().required('Last Country is required.'),\r\n    country: yup.string().required('Country is required.'),\r\n    state: yup.string().required('State is required.'),\r\n    city: yup.string().required('City is required.'),\r\n    zipCode: yup.string().required('Zipcode is required.'),\r\n    address1: yup.string().required('Address 1 is required.'),\r\n    address2: yup.string().required('Address 2 is required.'),\r\n    linkedinUrl: yup.string().url('Invalid url'),\r\n    facebookUrl: yup.string().url('Invalid url'),\r\n    twitterUrl: yup.string().url('Invalid url'),\r\n    website: yup.string().url('Invalid url'),\r\n    currency: yup.string().required('Currency is required.'),\r\n    chartOfAccounts: yup.string().required('Chart of Accounts is required.'),\r\n    companyNumber: yup.string().required('Company Number is required.'),\r\n    taxNumber: yup.string().required('Tax Number is required.'),\r\n  });\r\n  \r\n  function ViewCandidatePage() {\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n    const [customer, setCustomer] = useState();\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const { openSnackbar } = useSnackbar();\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const { data } = await api.get(`/customers/${router.query.id}`);\r\n        setCustomer(data);\r\n      };\r\n    //   fetchData();\r\n    }, [router.query.id]);\r\n  \r\n    function openDialog() {\r\n      setDialogOpen(true);\r\n    }\r\n  \r\n    function handleDialogClose() {\r\n      setDialogOpen(false);\r\n    }\r\n  \r\n    const updateCustomerDetails = async (values, actions) => {\r\n      try {\r\n        await api.put(`/customers`, values);\r\n        openSnackbar('success', 'Customer updated.');\r\n        router.push('/customers');\r\n      } catch (error) {\r\n        openSnackbar('error',error.response.data.errors[0]);\r\n        actions.setSubmitting(false);\r\n      }\r\n    };\r\n  \r\n\r\n  \r\n    if (!customer) {\r\n      return <Layout pageName=\"View Candidate\"><CircularLoader /></Layout>\r\n    }\r\n  \r\n    return (\r\n      <Layout pageName=\"View Candidate\">\r\n        {/* <Dialog\r\n          open={dialogOpen}\r\n          onClose={handleDialogClose}\r\n          TransitionComponent={Grow}\r\n        >\r\n          <DialogTitle>Verification</DialogTitle>\r\n  \r\n          <DialogContent>\r\n            <MuiTextField label=\"OTP\" fullWidth />\r\n          </DialogContent>\r\n          <DialogActions className={classes.dialogActions}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.deleteButton}\r\n              startIcon={<DeleteIcon />}\r\n              onClick={deleteCustomerDetails}\r\n            >\r\n              Confirm\r\n            </Button>\r\n  \r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog> */}\r\n        <Container>\r\n          <Paper className={classes.accountPaper}>\r\n            <Typography variant=\"h5\">Candidates Details</Typography>\r\n  \r\n            \r\n          </Paper>\r\n        </Container>\r\n      </Layout>\r\n    );\r\n  }\r\n  \r\n  export default ViewCandidatePage;\r\n  "]},"metadata":{},"sourceType":"module"}