{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\Shrinath\\\\Technoark\\\\allPros\\\\pages\\\\dashboard\\\\index.jsx\";\nvar __jsx = React.createElement;\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { MyResponsiveBar } from '../../components/charts/BarChart';\nimport { MyResponsiveLine } from '../../components/charts/LineChart';\nimport { MyResponsivePie } from '../../components/charts/PieChart';\nimport { MyMapComponent } from '../../components/google-map/GoogleMap';\nimport DatePicker from '../../components/pickers/DatePicker';\nimport Layout from '../../layout';\nimport api from '../../lib/api';\nimport { useSnackbar } from '../../lib/context';\nvar data = [{\n  id: 'france',\n  color: 'red',\n  data: [{\n    x: 'January',\n    y: 75\n  }, {\n    x: 'February',\n    y: 263\n  }, {\n    x: 'March',\n    y: 178\n  }, {\n    x: 'April',\n    y: 187\n  }, {\n    x: 'May',\n    y: 42\n  }, {\n    x: 'June',\n    y: 5\n  }, {\n    x: 'July',\n    y: 108\n  }, {\n    x: 'August',\n    y: 223\n  }, {\n    x: 'September',\n    y: 277\n  }, {\n    x: 'October',\n    y: 38\n  }, {\n    x: 'November',\n    y: 293\n  }, {\n    x: 'December',\n    y: 253\n  }]\n}];\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    Paper: {\n      padding: '1em'\n    },\n    CircularStat: {\n      textAlign: 'right',\n      fontSize: '1.5rem',\n      fontWeight: '600',\n      width: 'auto',\n      height: '70px',\n      background: 'linear-gradient(to right, #24243e, #302b63, #0f0c29)',\n      color: 'white',\n      borderRadius: '5%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '1rem'\n    },\n    table: {\n      width: '100%',\n      borderRadius: '5px',\n      overflow: 'hidden',\n      borderCollapse: 'collapse',\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      marginTop: '1rem'\n    },\n    th: {\n      textAlign: 'left',\n      borderBottom: '1px solid #b7b7b7',\n      padding: '0.8em 0.4em 0.8em 1.2em',\n      backgroundColor: '#CCFFE5',\n      color: 'black',\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      '&:hover': {\n        backgroundColor: 'transparent',\n        cursor: 'pointer'\n      }\n    },\n    td: {\n      textAlign: 'left',\n      borderBottom: '1px solid #bdc2db',\n      padding: '0.8em 0.4em 0.8em 1.2em'\n    },\n    tr: {\n      '&:hover': {\n        backgroundColor: 'aliceblue'\n      }\n    }\n  };\n});\n\nvar MetricCard = function MetricCard(_ref) {\n  var title = _ref.title,\n      stat = _ref.stat;\n  var classes = useStyles();\n  return __jsx(Paper, {\n    classes: {\n      root: classes.Paper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    style: {\n      marginBottom: '1em',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, title), __jsx(\"p\", {\n    className: classes.CircularStat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, stat));\n};\n\nfunction DashboardPage() {\n  var _useState = useState({\n    startDate: null,\n    endDate: null\n  }),\n      filters = _useState[0],\n      setFilters = _useState[1];\n\n  var _useState2 = useState(),\n      locations = _useState2[0],\n      setLocations = _useState2[1];\n\n  var _useState3 = useState(),\n      dashboard = _useState3[0],\n      setDashboard = _useState3[1];\n\n  var _useState4 = useState(),\n      notifications = _useState4[0],\n      setNotifications = _useState4[1];\n\n  var _useSnackbar = useSnackbar(),\n      openSnackbar = _useSnackbar.openSnackbar;\n\n  var classes = useStyles();\n\n  var customDate = function customDate(date) {\n    var d = new Date(date);\n    return (d.getMonth() > 8 ? d.getMonth() + 1 : '0' + (d.getMonth() + 1)) + '/' + (d.getDate() > 9 ? d.getDate() : '0' + d.getDate()) + '/' + d.getFullYear();\n  };\n\n  useEffect(function () {\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (filters.startDate != null && filters.endDate == null) {\n      setFilters(_objectSpread({}, filters, {\n        endDate: new Date()\n      }));\n    } else if (filters.startDate == null && filters.endDate != null) {\n      setFilters(_objectSpread({}, filters, {\n        startDate: new Date()\n      }));\n    } else {\n      fetchData();\n    }\n  }, [filters]); // if (!dashboard && !locations) {\n  //   return <Layout pageName=\"Dashboard\">Loading...</Layout>;\n  // }\n\n  var listData = [];\n\n  if (dashboard !== undefined) {\n    dashboard.totalSalesMonthlyList.forEach(function (element, index) {\n      var data = {\n        x: months[index],\n        y: element\n      };\n      listData.push(data);\n    });\n  } // let data = [\n  //   {\n  //     id: 'total sales',\n  //     color: 'red',\n  //     data: listData.length !== 0 ? listData : [],\n  //   },\n  // ];\n\n\n  var data = [{\n    id: 'japan',\n    color: 'hsl(273, 70%, 50%)',\n    data: [{\n      x: 'plane',\n      y: 85\n    }, {\n      x: 'helicopter',\n      y: 196\n    }, {\n      x: 'boat',\n      y: 261\n    }, {\n      x: 'train',\n      y: 99\n    }, {\n      x: 'subway',\n      y: 296\n    }, {\n      x: 'bus',\n      y: 229\n    }, {\n      x: 'car',\n      y: 43\n    }, {\n      x: 'moto',\n      y: 152\n    }, {\n      x: 'bicycle',\n      y: 280\n    }, {\n      x: 'horse',\n      y: 156\n    }, {\n      x: 'skateboard',\n      y: 184\n    }, {\n      x: 'others',\n      y: 235\n    }]\n  }, {\n    id: 'france',\n    color: 'hsl(58, 70%, 50%)',\n    data: [{\n      x: 'plane',\n      y: 198\n    }, {\n      x: 'helicopter',\n      y: 13\n    }, {\n      x: 'boat',\n      y: 74\n    }, {\n      x: 'train',\n      y: 85\n    }, {\n      x: 'subway',\n      y: 190\n    }, {\n      x: 'bus',\n      y: 173\n    }, {\n      x: 'car',\n      y: 125\n    }, {\n      x: 'moto',\n      y: 12\n    }, {\n      x: 'bicycle',\n      y: 128\n    }, {\n      x: 'horse',\n      y: 293\n    }, {\n      x: 'skateboard',\n      y: 159\n    }, {\n      x: 'others',\n      y: 267\n    }]\n  }, {\n    id: 'us',\n    color: 'hsl(165, 70%, 50%)',\n    data: [{\n      x: 'plane',\n      y: 1\n    }, {\n      x: 'helicopter',\n      y: 49\n    }, {\n      x: 'boat',\n      y: 43\n    }, {\n      x: 'train',\n      y: 4\n    }, {\n      x: 'subway',\n      y: 244\n    }, {\n      x: 'bus',\n      y: 140\n    }, {\n      x: 'car',\n      y: 32\n    }, {\n      x: 'moto',\n      y: 268\n    }, {\n      x: 'bicycle',\n      y: 258\n    }, {\n      x: 'horse',\n      y: 14\n    }, {\n      x: 'skateboard',\n      y: 37\n    }, {\n      x: 'others',\n      y: 259\n    }]\n  }, {\n    id: 'germany',\n    color: 'hsl(51, 70%, 50%)',\n    data: [{\n      x: 'plane',\n      y: 113\n    }, {\n      x: 'helicopter',\n      y: 80\n    }, {\n      x: 'boat',\n      y: 132\n    }, {\n      x: 'train',\n      y: 286\n    }, {\n      x: 'subway',\n      y: 262\n    }, {\n      x: 'bus',\n      y: 222\n    }, {\n      x: 'car',\n      y: 122\n    }, {\n      x: 'moto',\n      y: 296\n    }, {\n      x: 'bicycle',\n      y: 26\n    }, {\n      x: 'horse',\n      y: 254\n    }, {\n      x: 'skateboard',\n      y: 77\n    }, {\n      x: 'others',\n      y: 70\n    }]\n  }, {\n    id: 'norway',\n    color: 'hsl(183, 70%, 50%)',\n    data: [{\n      x: 'plane',\n      y: 167\n    }, {\n      x: 'helicopter',\n      y: 33\n    }, {\n      x: 'boat',\n      y: 39\n    }, {\n      x: 'train',\n      y: 137\n    }, {\n      x: 'subway',\n      y: 97\n    }, {\n      x: 'bus',\n      y: 250\n    }, {\n      x: 'car',\n      y: 97\n    }, {\n      x: 'moto',\n      y: 127\n    }, {\n      x: 'bicycle',\n      y: 107\n    }, {\n      x: 'horse',\n      y: 189\n    }, {\n      x: 'skateboard',\n      y: 27\n    }, {\n      x: 'others',\n      y: 60\n    }]\n  }];\n  return __jsx(Layout, {\n    pageName: \"Dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    style: {\n      marginTop: '1em',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499\n    },\n    __self: this\n  }, \"Registrations\")), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, __jsx(MetricCard, {\n    title: \"Total\",\n    stat: \"10000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  }, __jsx(MetricCard, {\n    title: \"This Month\",\n    stat: \"5000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, __jsx(MetricCard, {\n    title: \"Today\",\n    stat: \"500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    style: {\n      marginTop: '1em',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537\n    },\n    __self: this\n  }, \"Total Subscription\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      height: '400px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545\n    },\n    __self: this\n  }, __jsx(MyResponsiveLine, {\n    data: data,\n    xLabel: \"months\",\n    yLabel: \"Total Subscription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    style: {\n      marginTop: '1em',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613\n    },\n    __self: this\n  }, \"Reports\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      height: '400px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, __jsx(MyResponsiveBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      height: '400px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626\n    },\n    __self: this\n  }, __jsx(MyResponsivePie, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627\n    },\n    __self: this\n  })))));\n}\n\nexport default DashboardPage;","map":{"version":3,"sources":["F:\\Shrinath\\Technoark\\allPros\\pages\\dashboard\\index.jsx"],"names":["Grid","Paper","Typography","makeStyles","Field","Form","Formik","React","useEffect","useState","MyResponsiveBar","MyResponsiveLine","MyResponsivePie","MyMapComponent","DatePicker","Layout","api","useSnackbar","data","id","color","x","y","months","useStyles","theme","padding","CircularStat","textAlign","fontSize","fontWeight","width","height","background","borderRadius","display","alignItems","justifyContent","margin","table","overflow","borderCollapse","fontFamily","marginTop","th","borderBottom","backgroundColor","textTransform","cursor","td","tr","MetricCard","title","stat","classes","root","marginBottom","DashboardPage","startDate","endDate","filters","setFilters","locations","setLocations","dashboard","setDashboard","notifications","setNotifications","openSnackbar","customDate","date","d","Date","getMonth","getDate","getFullYear","fetchData","listData","undefined","totalSalesMonthlyList","forEach","element","index","push"],"mappings":"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","sourcesContent":["import { Grid, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MyResponsiveBar } from '../../components/charts/BarChart';\r\nimport { MyResponsiveLine } from '../../components/charts/LineChart';\r\nimport { MyResponsivePie } from '../../components/charts/PieChart';\r\nimport { MyMapComponent } from '../../components/google-map/GoogleMap';\r\nimport DatePicker from '../../components/pickers/DatePicker';\r\nimport Layout from '../../layout';\r\nimport api from '../../lib/api';\r\nimport { useSnackbar } from '../../lib/context';\r\n\r\nlet data = [\r\n    {\r\n        id: 'france',\r\n        color: 'red',\r\n        data: [\r\n            {\r\n                x: 'January',\r\n                y: 75,\r\n            },\r\n            {\r\n                x: 'February',\r\n                y: 263,\r\n            },\r\n            {\r\n                x: 'March',\r\n                y: 178,\r\n            },\r\n            {\r\n                x: 'April',\r\n                y: 187,\r\n            },\r\n            {\r\n                x: 'May',\r\n                y: 42,\r\n            },\r\n            {\r\n                x: 'June',\r\n                y: 5,\r\n            },\r\n            {\r\n                x: 'July',\r\n                y: 108,\r\n            },\r\n            {\r\n                x: 'August',\r\n                y: 223,\r\n            },\r\n            {\r\n                x: 'September',\r\n                y: 277,\r\n            },\r\n            {\r\n                x: 'October',\r\n                y: 38,\r\n            },\r\n            {\r\n                x: 'November',\r\n                y: 293,\r\n            },\r\n            {\r\n                x: 'December',\r\n                y: 253,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nlet months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    Paper: {\r\n        padding: '1em',\r\n    },\r\n    CircularStat: {\r\n        textAlign: 'right',\r\n        fontSize: '1.5rem',\r\n        fontWeight: '600',\r\n        width: 'auto',\r\n        height: '70px',\r\n        background: 'linear-gradient(to right, #24243e, #302b63, #0f0c29)',\r\n        color: 'white',\r\n        borderRadius: '5%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: '1rem',\r\n    },\r\n    table: {\r\n        width: '100%',\r\n        borderRadius: '5px',\r\n        overflow: 'hidden',\r\n        borderCollapse: 'collapse',\r\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n        marginTop: '1rem',\r\n    },\r\n    th: {\r\n        textAlign: 'left',\r\n        borderBottom: '1px solid #b7b7b7',\r\n        padding: '0.8em 0.4em 0.8em 1.2em',\r\n        backgroundColor: '#CCFFE5',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n    td: {\r\n        textAlign: 'left',\r\n        borderBottom: '1px solid #bdc2db',\r\n        padding: '0.8em 0.4em 0.8em 1.2em',\r\n    },\r\n    tr: {\r\n        '&:hover': {\r\n            backgroundColor: 'aliceblue',\r\n        },\r\n    },\r\n}));\r\n\r\nconst MetricCard = ({ title, stat }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper classes={{ root: classes.Paper }}>\r\n            <Typography\r\n                variant=\"h6\"\r\n                style={{ marginBottom: '1em', textAlign: 'center' }}\r\n            >\r\n                {title}\r\n            </Typography>\r\n            <p className={classes.CircularStat}>{stat}</p>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nfunction DashboardPage() {\r\n    const [filters, setFilters] = useState({\r\n        startDate: null,\r\n        endDate: null,\r\n    });\r\n\r\n    const [locations, setLocations] = useState();\r\n    const [dashboard, setDashboard] = useState();\r\n    const [notifications, setNotifications] = useState();\r\n\r\n    const { openSnackbar } = useSnackbar();\r\n    const classes = useStyles();\r\n    const customDate = (date) => {\r\n        const d = new Date(date);\r\n        return (\r\n            (d.getMonth() > 8 ? d.getMonth() + 1 : '0' + (d.getMonth() + 1)) +\r\n            '/' +\r\n            (d.getDate() > 9 ? d.getDate() : '0' + d.getDate()) +\r\n            '/' +\r\n            d.getFullYear()\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // try {\r\n            //   const { data } = await api.post('/dashboard', filters);\r\n            //   setDashboard(data);\r\n            //   setLocations(data.locations);\r\n            //   setNotifications(data.vendorNotifications);\r\n            // } catch (error) {\r\n            //   if (\r\n            //     error.response !== undefined ||\r\n            //     error.response.data !== undefined ||\r\n            //     error.response.data.errors.length !== 0\r\n            //   ) {\r\n            //     openSnackbar('error', error.response.data.errors[0]);\r\n            //   } else {\r\n            //     openSnackbar('error', error.message);\r\n            //   }\r\n            // }\r\n        };\r\n        if (filters.startDate != null && filters.endDate == null) {\r\n            setFilters({ ...filters, endDate: new Date() });\r\n        } else if (filters.startDate == null && filters.endDate != null) {\r\n            setFilters({ ...filters, startDate: new Date() });\r\n        } else {\r\n            fetchData();\r\n        }\r\n    }, [filters]);\r\n\r\n    // if (!dashboard && !locations) {\r\n    //   return <Layout pageName=\"Dashboard\">Loading...</Layout>;\r\n    // }\r\n\r\n    let listData = [];\r\n    if (dashboard !== undefined) {\r\n        dashboard.totalSalesMonthlyList.forEach(function (element, index) {\r\n            const data = { x: months[index], y: element };\r\n            listData.push(data);\r\n        });\r\n    }\r\n\r\n    // let data = [\r\n    //   {\r\n    //     id: 'total sales',\r\n    //     color: 'red',\r\n    //     data: listData.length !== 0 ? listData : [],\r\n    //   },\r\n    // ];\r\n\r\n    let data = [\r\n        {\r\n            id: 'japan',\r\n            color: 'hsl(273, 70%, 50%)',\r\n            data: [\r\n                {\r\n                    x: 'plane',\r\n                    y: 85,\r\n                },\r\n                {\r\n                    x: 'helicopter',\r\n                    y: 196,\r\n                },\r\n                {\r\n                    x: 'boat',\r\n                    y: 261,\r\n                },\r\n                {\r\n                    x: 'train',\r\n                    y: 99,\r\n                },\r\n                {\r\n                    x: 'subway',\r\n                    y: 296,\r\n                },\r\n                {\r\n                    x: 'bus',\r\n                    y: 229,\r\n                },\r\n                {\r\n                    x: 'car',\r\n                    y: 43,\r\n                },\r\n                {\r\n                    x: 'moto',\r\n                    y: 152,\r\n                },\r\n                {\r\n                    x: 'bicycle',\r\n                    y: 280,\r\n                },\r\n                {\r\n                    x: 'horse',\r\n                    y: 156,\r\n                },\r\n                {\r\n                    x: 'skateboard',\r\n                    y: 184,\r\n                },\r\n                {\r\n                    x: 'others',\r\n                    y: 235,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'france',\r\n            color: 'hsl(58, 70%, 50%)',\r\n            data: [\r\n                {\r\n                    x: 'plane',\r\n                    y: 198,\r\n                },\r\n                {\r\n                    x: 'helicopter',\r\n                    y: 13,\r\n                },\r\n                {\r\n                    x: 'boat',\r\n                    y: 74,\r\n                },\r\n                {\r\n                    x: 'train',\r\n                    y: 85,\r\n                },\r\n                {\r\n                    x: 'subway',\r\n                    y: 190,\r\n                },\r\n                {\r\n                    x: 'bus',\r\n                    y: 173,\r\n                },\r\n                {\r\n                    x: 'car',\r\n                    y: 125,\r\n                },\r\n                {\r\n                    x: 'moto',\r\n                    y: 12,\r\n                },\r\n                {\r\n                    x: 'bicycle',\r\n                    y: 128,\r\n                },\r\n                {\r\n                    x: 'horse',\r\n                    y: 293,\r\n                },\r\n                {\r\n                    x: 'skateboard',\r\n                    y: 159,\r\n                },\r\n                {\r\n                    x: 'others',\r\n                    y: 267,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'us',\r\n            color: 'hsl(165, 70%, 50%)',\r\n            data: [\r\n                {\r\n                    x: 'plane',\r\n                    y: 1,\r\n                },\r\n                {\r\n                    x: 'helicopter',\r\n                    y: 49,\r\n                },\r\n                {\r\n                    x: 'boat',\r\n                    y: 43,\r\n                },\r\n                {\r\n                    x: 'train',\r\n                    y: 4,\r\n                },\r\n                {\r\n                    x: 'subway',\r\n                    y: 244,\r\n                },\r\n                {\r\n                    x: 'bus',\r\n                    y: 140,\r\n                },\r\n                {\r\n                    x: 'car',\r\n                    y: 32,\r\n                },\r\n                {\r\n                    x: 'moto',\r\n                    y: 268,\r\n                },\r\n                {\r\n                    x: 'bicycle',\r\n                    y: 258,\r\n                },\r\n                {\r\n                    x: 'horse',\r\n                    y: 14,\r\n                },\r\n                {\r\n                    x: 'skateboard',\r\n                    y: 37,\r\n                },\r\n                {\r\n                    x: 'others',\r\n                    y: 259,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'germany',\r\n            color: 'hsl(51, 70%, 50%)',\r\n            data: [\r\n                {\r\n                    x: 'plane',\r\n                    y: 113,\r\n                },\r\n                {\r\n                    x: 'helicopter',\r\n                    y: 80,\r\n                },\r\n                {\r\n                    x: 'boat',\r\n                    y: 132,\r\n                },\r\n                {\r\n                    x: 'train',\r\n                    y: 286,\r\n                },\r\n                {\r\n                    x: 'subway',\r\n                    y: 262,\r\n                },\r\n                {\r\n                    x: 'bus',\r\n                    y: 222,\r\n                },\r\n                {\r\n                    x: 'car',\r\n                    y: 122,\r\n                },\r\n                {\r\n                    x: 'moto',\r\n                    y: 296,\r\n                },\r\n                {\r\n                    x: 'bicycle',\r\n                    y: 26,\r\n                },\r\n                {\r\n                    x: 'horse',\r\n                    y: 254,\r\n                },\r\n                {\r\n                    x: 'skateboard',\r\n                    y: 77,\r\n                },\r\n                {\r\n                    x: 'others',\r\n                    y: 70,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'norway',\r\n            color: 'hsl(183, 70%, 50%)',\r\n            data: [\r\n                {\r\n                    x: 'plane',\r\n                    y: 167,\r\n                },\r\n                {\r\n                    x: 'helicopter',\r\n                    y: 33,\r\n                },\r\n                {\r\n                    x: 'boat',\r\n                    y: 39,\r\n                },\r\n                {\r\n                    x: 'train',\r\n                    y: 137,\r\n                },\r\n                {\r\n                    x: 'subway',\r\n                    y: 97,\r\n                },\r\n                {\r\n                    x: 'bus',\r\n                    y: 250,\r\n                },\r\n                {\r\n                    x: 'car',\r\n                    y: 97,\r\n                },\r\n                {\r\n                    x: 'moto',\r\n                    y: 127,\r\n                },\r\n                {\r\n                    x: 'bicycle',\r\n                    y: 107,\r\n                },\r\n                {\r\n                    x: 'horse',\r\n                    y: 189,\r\n                },\r\n                {\r\n                    x: 'skateboard',\r\n                    y: 27,\r\n                },\r\n                {\r\n                    x: 'others',\r\n                    y: 60,\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Layout pageName=\"Dashboard\">\r\n            <Grid container spacing={2} justify=\"center\">\r\n            <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ marginTop: '1em', textAlign: 'center' }}\r\n                    >\r\n                       Registrations\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <MetricCard\r\n                        title=\"Total\"\r\n                        stat='10000'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <MetricCard\r\n                        title=\"This Month\"\r\n                        stat='5000'\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <MetricCard\r\n                        title=\"Today\"\r\n                        stat='500'\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item xs={2}>\r\n                    <MetricCard\r\n                        title=\"Monthly Sales\"\r\n                        stat={dashboard && '$' + dashboard.monthlySales}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <MetricCard\r\n                        title=\"Total Sales\"\r\n                        stat={dashboard && '$' + dashboard.totalSales}\r\n                    />\r\n                </Grid> */}\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ marginTop: '1em', textAlign: 'center' }}\r\n                    >\r\n                        Total Subscription\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div style={{ height: '400px' }}>\r\n                        <MyResponsiveLine\r\n                            data={data}\r\n                            xLabel=\"months\"\r\n                            yLabel=\"Total Subscription\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                {/* <Grid item xs={6}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ marginTop: '1em', textAlign: 'center' }}\r\n                    >\r\n                        Upcoming Notification\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ marginTop: '1em', textAlign: 'center' }}\r\n                    >\r\n                        Leads\r\n                    </Typography>\r\n                </Grid> */}\r\n                {/* {notifications && (\r\n                    <Grid item xs={6}>\r\n                        <div\r\n                            style={{\r\n                                height: '400px',\r\n                                maxHeight: '450px',\r\n                                overflow: 'auto',\r\n                            }}\r\n                        >\r\n                            <table className={classes.table}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className={classes.th}>Date</th>\r\n                                        <th className={classes.th}>Message</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {notifications.map((notification) => (\r\n                                        <tr className={classes.tr}>\r\n                                            <td\r\n                                                className={classes.td}\r\n                                                style={{ width: '30%' }}\r\n                                            >\r\n                                                {customDate(notification.date)}\r\n                                            </td>\r\n                                            <td\r\n                                                className={classes.td}\r\n                                                style={{ width: '70%' }}\r\n                                            >\r\n                                                {notification.message}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </Grid>\r\n                )}\r\n                <Grid item xs={6}>\r\n                    <div style={{ height: '400px' }}>\r\n                        <MyResponsiveLine data={data} />\r\n                    </div>\r\n                </Grid> */}\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ marginTop: '1em', textAlign: 'center' }}\r\n                    >\r\n                        Reports\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div style={{ height: '400px' }}>\r\n                        <MyResponsiveBar />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div style={{ height: '400px' }}>\r\n                        <MyResponsivePie />\r\n                    </div>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    {locations && (\r\n                        <MyMapComponent\r\n                            locations={locations}\r\n                            isMarkerShown\r\n                            height=\"400px\"\r\n                        />\r\n                    )}\r\n                </Grid> */}\r\n            </Grid>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default DashboardPage;\r\n"]},"metadata":{},"sourceType":"module"}