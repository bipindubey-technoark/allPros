{"ast":null,"code":"var _jsxFileName = \"/home/bipin/allPros/pages/candidates/Form/[id].jsx\";\nvar __jsx = React.createElement;\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grow, Paper, TextField as MuiTextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport Fieldset, { Legend } from \"../../../components/fieldset\";\nimport Layout from \"../../../layout\";\nimport api from \"../../../lib/api\";\nimport { useSnackbar } from \"../../../lib/context\";\nimport CandidatesForm from \"../../../components/forms/CandidatesForm\";\nimport CircularLoader from \"../../../components/loader/CircularLoader\";\nconst useStyles = makeStyles(theme => ({\n  accountPaper: {\n    padding: 20\n  },\n  margin: {\n    margin: \"60px 0\"\n  },\n  deleteButton: {\n    color: \"white\",\n    backgroundColor: theme.palette.danger.main,\n    \"&:hover\": {\n      backgroundColor: theme.palette.danger.main\n    }\n  },\n  dialogActions: {\n    padding: 20\n  }\n}));\n\nfunction ViewOwner() {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: candidate,\n    1: setCandidate\n  } = useState({\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Smith\",\n    email: \"john@co\",\n    phone: \"987123123\"\n  });\n  const {\n    0: dialogOpen,\n    1: setDialogOpen\n  } = useState(false);\n  const {\n    openSnackbar\n  } = useSnackbar();\n  useEffect(() => {//   const fetchData = async () => {\n    //     const { data } = await api.get(`/Members/${router.query.id}`);\n    //     setMember(data);\n    //   };\n    //   fetchData();\n  }, [router.query.id]);\n\n  function openDialog() {\n    setDialogOpen(true);\n  }\n\n  function handleDialogClose() {\n    setDialogOpen(false);\n  } // const handleUpdate = async (values, actions) => {\n  //   try {\n  //     await api.put(`/Members`, values);\n  //     openSnackbar('success', 'Member updated.');\n  //     router.push('/Members');\n  //   } catch (error) {\n  //     openSnackbar('error',error.response.data.errors[0]);\n  //     actions.setSubmitting(false);\n  //   }\n  // };\n\n\n  if (!candidate) {\n    return __jsx(Layout, {\n      pageName: \"View Candidate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(CircularLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n  return __jsx(Layout, {\n    pageName: \"View Candidate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.accountPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Candidate Details\"), __jsx(Formik //   validationSchema={validationSchema}\n  , {\n    initialValues: candidate //   onSubmit={handleUpdate}\n    ,\n    component: CandidatesForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))));\n}\n\nexport default ViewOwner;","map":{"version":3,"sources":["/home/bipin/allPros/pages/candidates/Form/[id].jsx"],"names":["Button","Container","Dialog","DialogActions","DialogContent","DialogTitle","Divider","Grow","Paper","TextField","MuiTextField","Typography","makeStyles","DeleteIcon","Formik","useRouter","React","useState","useEffect","yup","Fieldset","Legend","Layout","api","useSnackbar","CandidatesForm","CircularLoader","useStyles","theme","accountPaper","padding","margin","deleteButton","color","backgroundColor","palette","danger","main","dialogActions","ViewOwner","classes","router","candidate","setCandidate","id","firstName","lastName","email","phone","dialogOpen","setDialogOpen","openSnackbar","query","openDialog","handleDialogClose"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Grow,\n    Paper,\n    TextField as MuiTextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport Fieldset, { Legend } from \"../../../components/fieldset\";\nimport Layout from \"../../../layout\";\nimport api from \"../../../lib/api\";\nimport { useSnackbar } from \"../../../lib/context\";\nimport CandidatesForm from \"../../../components/forms/CandidatesForm\";\nimport CircularLoader from \"../../../components/loader/CircularLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n    accountPaper: {\n        padding: 20,\n    },\n    margin: {\n        margin: \"60px 0\",\n    },\n    deleteButton: {\n        color: \"white\",\n        backgroundColor: theme.palette.danger.main,\n        \"&:hover\": {\n            backgroundColor: theme.palette.danger.main,\n        },\n    },\n    dialogActions: {\n        padding: 20,\n    },\n}));\n\nfunction ViewOwner() {\n    const classes = useStyles();\n    const router = useRouter();\n    const [candidate, setCandidate] = useState({\n        id: 1,\n        firstName: \"John\",\n        lastName: \"Smith\",\n        email: \"john@co\",\n        phone: \"987123123\",\n    });\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const { openSnackbar } = useSnackbar();\n\n    useEffect(() => {\n        //   const fetchData = async () => {\n        //     const { data } = await api.get(`/Members/${router.query.id}`);\n        //     setMember(data);\n        //   };\n        //   fetchData();\n    }, [router.query.id]);\n\n    function openDialog() {\n        setDialogOpen(true);\n    }\n\n    function handleDialogClose() {\n        setDialogOpen(false);\n    }\n\n    // const handleUpdate = async (values, actions) => {\n    //   try {\n    //     await api.put(`/Members`, values);\n    //     openSnackbar('success', 'Member updated.');\n    //     router.push('/Members');\n    //   } catch (error) {\n    //     openSnackbar('error',error.response.data.errors[0]);\n    //     actions.setSubmitting(false);\n    //   }\n    // };\n\n    if (!candidate) {\n        return (\n            <Layout pageName=\"View Candidate\">\n                <CircularLoader />\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout pageName=\"View Candidate\">\n            <Container>\n                <Paper className={classes.accountPaper}>\n                    <Typography variant=\"h5\">Candidate Details</Typography>\n\n                    <Formik\n                        //   validationSchema={validationSchema}\n                        initialValues={candidate}\n                        //   onSubmit={handleUpdate}\n                        component={CandidatesForm}\n                    />\n                </Paper>\n            </Container>\n        </Layout>\n    );\n}\n\nexport default ViewOwner;\n"]},"metadata":{},"sourceType":"module"}