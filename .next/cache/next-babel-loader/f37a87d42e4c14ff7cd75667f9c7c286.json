{"ast":null,"code":"var _jsxFileName = \"/home/bipin/allPros/pages/candidates/Form/[id].jsx\";\nvar __jsx = React.createElement;\nimport { Button, Container, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grow, Paper, TextField as MuiTextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport Fieldset, { Legend } from \"../../../components/fieldset\";\nimport Layout from \"../../../layout\";\nimport api from \"../../../lib/api\";\nimport { useSnackbar } from \"../../../lib/context\";\nimport CandidatesForm from \"../../../components/forms/CandidatesForm\";\nimport CircularLoader from \"../../../components/loader/CircularLoader\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport TabPanel from \"../../../components/tabs/TabPanel\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    accountPaper: {\n      padding: 20\n    },\n    margin: {\n      margin: \"60px 0\"\n    },\n    deleteButton: {\n      color: \"white\",\n      backgroundColor: theme.palette.danger.main,\n      \"&:hover\": {\n        backgroundColor: theme.palette.danger.main\n      }\n    },\n    dialogActions: {\n      padding: 20\n    }\n  };\n});\n\nfunction ViewOwner() {\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState({\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Smith\",\n    email: \"john@co\",\n    phone: \"987123123\",\n    managerType: \"BOH Manager\",\n    yearsInHospitality: '',\n    currentRole: '',\n    yearsOfRoleWithCompany: '',\n    salary: '',\n    authorized: 'Yes',\n    transportationAccess: 'Yes',\n    avaiableToWork: '',\n    HoursPerWeek: HoursPerWeek\n  }),\n      candidate = _useState[0],\n      setCandidate = _useState[1];\n\n  var _useState2 = useState(false),\n      dialogOpen = _useState2[0],\n      setDialogOpen = _useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      openSnackbar = _useSnackbar.openSnackbar;\n\n  var _useState3 = useState(\"questionnaire\"),\n      selectedtab = _useState3[0],\n      setSelectedTab = _useState3[1];\n\n  useEffect(function () {//   const fetchData = async () => {\n    //     const { data } = await api.get(`/Members/${router.query.id}`);\n    //     setMember(data);\n    //   };\n    //   fetchData();\n  }, [router.query.id]);\n\n  function openDialog() {\n    setDialogOpen(true);\n  }\n\n  function handleDialogClose() {\n    setDialogOpen(false);\n  }\n\n  var handleTabChange = function handleTabChange(event, newValue) {\n    setSelectedTab(newValue);\n  }; // const handleUpdate = async (values, actions) => {\n  //   try {\n  //     await api.put(`/Members`, values);\n  //     openSnackbar('success', 'Member updated.');\n  //     router.push('/Members');\n  //   } catch (error) {\n  //     openSnackbar('error',error.response.data.errors[0]);\n  //     actions.setSubmitting(false);\n  //   }\n  // };\n\n\n  if (!candidate) {\n    return __jsx(Layout, {\n      pageName: \"View Candidate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(CircularLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n  return __jsx(Layout, {\n    pageName: \"View Candidate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    value: selectedtab,\n    onChange: handleTabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    style: {\n      backgroundColor: \"#3f0f3f\"\n    } // centered\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(Tab, {\n    value: \"questionnaire\",\n    style: {\n      color: \"white\"\n    },\n    label: \"Questionnaire Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(Tab, {\n    value: \"application\",\n    style: {\n      color: \"white\"\n    },\n    label: \"Application Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.accountPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    value: selectedtab,\n    index: \"questionnaire\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Candidate Details\"), __jsx(Formik //   validationSchema={validationSchema}\n  , {\n    initialValues: candidate //   onSubmit={handleUpdate}\n    ,\n    component: CandidatesForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    value: selectedtab,\n    index: \"application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))));\n}\n\nexport default ViewOwner;","map":{"version":3,"sources":["/home/bipin/allPros/pages/candidates/Form/[id].jsx"],"names":["Button","Container","Dialog","DialogActions","DialogContent","DialogTitle","Divider","Grow","Paper","TextField","MuiTextField","Typography","makeStyles","DeleteIcon","Formik","useRouter","React","useState","useEffect","yup","Fieldset","Legend","Layout","api","useSnackbar","CandidatesForm","CircularLoader","Tab","Tabs","TabPanel","useStyles","theme","accountPaper","padding","margin","deleteButton","color","backgroundColor","palette","danger","main","dialogActions","ViewOwner","classes","router","id","firstName","lastName","email","phone","managerType","yearsInHospitality","currentRole","yearsOfRoleWithCompany","salary","authorized","transportationAccess","avaiableToWork","HoursPerWeek","candidate","setCandidate","dialogOpen","setDialogOpen","openSnackbar","selectedtab","setSelectedTab","query","openDialog","handleDialogClose","handleTabChange","event","newValue"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Grow,\n    Paper,\n    TextField as MuiTextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport Fieldset, { Legend } from \"../../../components/fieldset\";\nimport Layout from \"../../../layout\";\nimport api from \"../../../lib/api\";\nimport { useSnackbar } from \"../../../lib/context\";\nimport CandidatesForm from \"../../../components/forms/CandidatesForm\";\nimport CircularLoader from \"../../../components/loader/CircularLoader\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport TabPanel from \"../../../components/tabs/TabPanel\";\n\nconst useStyles = makeStyles((theme) => ({\n    accountPaper: {\n        padding: 20,\n    },\n    margin: {\n        margin: \"60px 0\",\n    },\n    deleteButton: {\n        color: \"white\",\n        backgroundColor: theme.palette.danger.main,\n        \"&:hover\": {\n            backgroundColor: theme.palette.danger.main,\n        },\n    },\n    dialogActions: {\n        padding: 20,\n    },\n}));\n\nfunction ViewOwner() {\n    const classes = useStyles();\n    const router = useRouter();\n    const [candidate, setCandidate] = useState({\n        id: 1,\n        firstName: \"John\",\n        lastName: \"Smith\",\n        email: \"john@co\",\n        phone: \"987123123\",\n        managerType: \"BOH Manager\",\n        yearsInHospitality:'',\n        currentRole:'',\n        yearsOfRoleWithCompany:'',\n        salary:'',\n        authorized:'Yes',\n        transportationAccess:'Yes',\n        avaiableToWork:'',\n        HoursPerWeek\n    });\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const { openSnackbar } = useSnackbar();\n    const [selectedtab, setSelectedTab] = useState(\"questionnaire\");\n\n    useEffect(() => {\n        //   const fetchData = async () => {\n        //     const { data } = await api.get(`/Members/${router.query.id}`);\n        //     setMember(data);\n        //   };\n        //   fetchData();\n    }, [router.query.id]);\n\n    function openDialog() {\n        setDialogOpen(true);\n    }\n\n    function handleDialogClose() {\n        setDialogOpen(false);\n    }\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    };\n    // const handleUpdate = async (values, actions) => {\n    //   try {\n    //     await api.put(`/Members`, values);\n    //     openSnackbar('success', 'Member updated.');\n    //     router.push('/Members');\n    //   } catch (error) {\n    //     openSnackbar('error',error.response.data.errors[0]);\n    //     actions.setSubmitting(false);\n    //   }\n    // };\n\n    if (!candidate) {\n        return (\n            <Layout pageName=\"View Candidate\">\n                <CircularLoader />\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout pageName=\"View Candidate\">\n            <Tabs\n                value={selectedtab}\n                onChange={handleTabChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                style={{ backgroundColor: \"#3f0f3f\" }}\n                // centered\n            >\n                <Tab\n                    value=\"questionnaire\"\n                    style={{ color: \"white\" }}\n                    label=\"Questionnaire Form\"\n                />\n                <Tab\n                    value=\"application\"\n                    style={{ color: \"white\" }}\n                    label=\"Application Form\"\n                />\n            </Tabs>\n            <Container>\n                <Paper className={classes.accountPaper}>\n                    <TabPanel value={selectedtab} index=\"questionnaire\">\n                        <Typography variant=\"h5\">Candidate Details</Typography>\n                        <Formik\n                            //   validationSchema={validationSchema}\n                            initialValues={candidate}\n                            //   onSubmit={handleUpdate}\n                            component={CandidatesForm}\n                        />\n                    </TabPanel>\n                    <TabPanel\n                        value={selectedtab}\n                        index=\"application\"\n                    ></TabPanel>\n                </Paper>\n            </Container>\n        </Layout>\n    );\n}\n\nexport default ViewOwner;\n"]},"metadata":{},"sourceType":"module"}