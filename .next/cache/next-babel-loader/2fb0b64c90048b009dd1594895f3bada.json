{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nvar _jsxFileName = \"F:\\\\Shrinath\\\\Technoark\\\\allPros\\\\components\\\\google-map\\\\GoogleMap.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useState } from 'react';\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\nimport { compose, withProps } from 'recompose';\nexport const MyMapComponent = compose(withProps(props => ({\n  googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyAkQy1kMhjd_g3kDrGoMSh7VMl4QKkzFQY&v=3.exp&libraries=geometry,drawing,places',\n  loadingElement: __jsx(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  center: {\n    lat: 37.64,\n    lng: -94.95\n  },\n  // { lat: 25.03, lng: 121.6 }\n  containerElement: __jsx(\"div\", {\n    style: {\n      height: props.height\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }),\n  mapElement: __jsx(\"div\", {\n    style: {\n      height: `100%`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })\n})), withScriptjs, withGoogleMap)(props => {\n  const {\n    0: openInfo,\n    1: setOpenInfo\n  } = useState();\n  return __jsx(GoogleMap, {\n    defaultZoom: 5,\n    defaultCenter: {\n      lat: 38.616870,\n      lng: -97.765615 // lat: 30.1096375,\n      // lng: -95.37885260000002,\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.isMarkerShown && __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.locations.map((location, i) => {\n    return __jsx(Marker, {\n      position: {\n        lat: _parseFloat(location.latitude),\n        lng: _parseFloat(location.longitude)\n      },\n      onClick: () => setOpenInfo(_objectSpread({}, props.isOpen, {\n        [i]: true\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, openInfo && openInfo[i] && __jsx(InfoBox, {\n      onCloseClick: () => setOpenInfo(_objectSpread({}, props.isOpen, {\n        [i]: false\n      })),\n      options: {\n        closeBoxURL: ``,\n        enableEventPropagation: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        backgroundColor: `#f9f9ef`,\n        opacity: 0.75,\n        padding: `12px`,\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        fontSize: `16px`,\n        fontColor: `#08233B`,\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, location.company), __jsx(\"span\", {\n      style: {\n        position: 'absolute',\n        right: '0',\n        top: '0',\n        fontSize: '20px',\n        marginRight: '0.3em',\n        cursor: 'pointer'\n      },\n      onClick: () => setOpenInfo(_objectSpread({}, props.isOpen, {\n        [i]: false\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\xD7\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, location.address1))));\n  })));\n});","map":{"version":3,"sources":["F:\\Shrinath\\Technoark\\allPros\\components\\google-map\\GoogleMap.js"],"names":["Fragment","useState","GoogleMap","Marker","withGoogleMap","withScriptjs","InfoBox","compose","withProps","MyMapComponent","props","googleMapURL","loadingElement","height","center","lat","lng","containerElement","mapElement","openInfo","setOpenInfo","isMarkerShown","locations","map","location","i","latitude","longitude","isOpen","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","position","fontSize","fontColor","fontWeight","company","right","top","marginRight","cursor","address1"],"mappings":"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","sourcesContent":["import { Fragment, useState } from 'react';\r\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from 'react-google-maps';\r\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\r\nimport { compose, withProps } from 'recompose';\r\n\r\nexport const MyMapComponent = compose(\r\n  withProps(props=>({\r\n    googleMapURL:\r\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAkQy1kMhjd_g3kDrGoMSh7VMl4QKkzFQY&v=3.exp&libraries=geometry,drawing,places',\r\n    loadingElement: (\r\n      <div\r\n        style={{\r\n          height: `100%`,\r\n        }}\r\n      />\r\n    ),\r\n    center: { lat: 37.64, lng: -94.95 },\r\n    // { lat: 25.03, lng: 121.6 }\r\n    containerElement: (\r\n      <div\r\n        style={{\r\n          height: props.height,\r\n        }}\r\n      />\r\n    ),\r\n    mapElement: (\r\n      <div\r\n        style={{\r\n          height: `100%`,\r\n        }}\r\n      />\r\n    ),\r\n  })),\r\n  withScriptjs,\r\n  withGoogleMap,\r\n)(props => {\r\n  const [openInfo, setOpenInfo] = useState();\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={5}\r\n      defaultCenter={{\r\n        lat:38.616870,\r\n        lng:-97.765615,\r\n        // lat: 30.1096375,\r\n        // lng: -95.37885260000002,\r\n      }}\r\n    >\r\n      {props.isMarkerShown && (\r\n        <Fragment>\r\n          {props.locations.map((location, i) => {\r\n            return (\r\n              <Marker\r\n                position={{\r\n                  lat: parseFloat(location.latitude),\r\n                  lng: parseFloat(location.longitude),\r\n                }}\r\n                onClick={() => setOpenInfo({ ...props.isOpen, [i]: true })}\r\n              >\r\n                {openInfo && openInfo[i] && (\r\n                  <InfoBox\r\n                    onCloseClick={() => setOpenInfo({ ...props.isOpen, [i]: false })}\r\n                    options={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: `#f9f9ef`,\r\n                        opacity: 0.75,\r\n                        padding: `12px`,\r\n                        position: 'relative',\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          fontSize: `16px`,\r\n                          fontColor: `#08233B`,\r\n                          fontWeight: 'bold',\r\n                        }}\r\n                      >\r\n                        {location.company}\r\n                      </div>\r\n                      <span\r\n                        style={{\r\n                          position: 'absolute',\r\n                          right: '0',\r\n                          top: '0',\r\n                          fontSize: '20px',\r\n                          marginRight: '0.3em',\r\n                          cursor:'pointer'\r\n                        }}\r\n                        onClick={() => setOpenInfo({ ...props.isOpen, [i]: false })}\r\n                      >\r\n                        &times;\r\n                      </span>\r\n                      <p>{location.address1}</p>\r\n                    </div>\r\n                  </InfoBox>\r\n                )}\r\n              </Marker>\r\n            );\r\n          })}\r\n        </Fragment>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}