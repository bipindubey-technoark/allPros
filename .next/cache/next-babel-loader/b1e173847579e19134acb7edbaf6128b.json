{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/bipin/allPros/pages/login.jsx\";\nvar __jsx = React.createElement;\nimport { Button, Divider, InputAdornment, Paper, Typography, Box } from '@material-ui/core';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/styles';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { useRouter } from 'next/router';\nimport React, { useState, Suspense, useEffect } from 'react';\nimport { useAuth } from '../context/authContext';\nimport api from '../lib/api';\nimport { CircularLoaderWrapper } from '../components/loader/CircularLoader';\nimport { useSnackbar } from '../lib/context';\nimport Link from 'next/link';\nimport logo from '../assets/img/logo.jpg';\nimport * as yup from 'yup';\nvar useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '80vh',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginTitle: {\n    textAlign: 'center'\n  },\n  logoText: {\n    margin: 20\n  },\n  formPaper: {\n    // display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: '80%',\n    maxWidth: 600,\n    height: 'fit-content',\n    padding: 35,\n    margin: 20\n  },\n  loginButton: {\n    marginTop: 12,\n    width: 120\n  },\n  divider: {\n    marginTop: 12\n  },\n  links: {\n    display: 'flex',\n    // justifyContent: 'space-between', \n    justifyContent: 'flex-end',\n    marginTop: 8\n  },\n  link: {\n    textDecoration: 'underline',\n    cursor: 'pointer',\n    fontSize: 14\n  },\n  busCard: {\n    maxWidth: '400px',\n    padding: '1em',\n    borderRadius: '5px',\n    boxShadow: '0 2px 6px 1px #bbbbde',\n    color: 'white',\n    letterSpacing: '1px',\n    fontSize: '17px',\n    margin: '0 auto 0.5em auto',\n    // background: 'linear-gradient(to right,#474775, #6d6d90)',\n    backgroundColor: '#3f0f3f',\n    cursor: 'pointer'\n  }\n});\nvar validationSchema = yup.object().shape({\n  username: yup.string().required('UserName is required.'),\n  password: yup.string().required('Password is required.')\n});\n\nfunction LoginForm() {\n  var classes = useStyles();\n  return __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Field, {\n    name: \"username\",\n    component: TextField,\n    label: \"Username\",\n    margin: \"normal\",\n    InputProps: {\n      endAdornment: __jsx(InputAdornment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(PersonIcon, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))\n    },\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), __jsx(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: TextField,\n    label: \"Password\",\n    margin: \"normal\",\n    InputProps: {\n      endAdornment: __jsx(InputAdornment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, __jsx(LockIcon, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))\n    },\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(Button, {\n    className: classes.loginButton,\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Login\"));\n}\n\nfunction LoginPage() {\n  var router = useRouter();\n  var classes = useStyles(); // const [state, dispatch] = useAuth();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useSnackbar = useSnackbar(),\n      openSnackbar = _useSnackbar.openSnackbar;\n\n  function handleSubmit(_x, _x2) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(values, _ref) {\n      var resetForm;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              resetForm = _ref.resetForm;\n              // try {\n              //     setLoading(true);\n              //     let {\n              //         data: { authorizationToken },\n              //     } = await api.post('authentication/login', values);\n              // dispatch({ type: 'UPDATE_USER_TOKEN', payload: authorizationToken });\n              // setBusinesses(business);\n              // localStorage.setItem('authToken', authorizationToken);\n              // setLoading(false);\n              router.push('/dashboard'); // } catch (error) {\n              //     openSnackbar('error', error.response.data.errors[0]);\n              //     setLoading(false);\n              //     resetForm();\n              // }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.formPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.loginTitle,\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"All Pros Login\"), __jsx(Formik, {\n    validationSchema: validationSchema,\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    component: LoginForm,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), __jsx(Divider, {\n    variant: \"fullWidth\",\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/forgotpassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Forgot Password?\")))), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      fontSize: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"http://www.kbizzsolutions.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    style: {\n      color: 'black',\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Powered by: K Business Solutions Inc\"))));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/bipin/allPros/pages/login.jsx"],"names":["Button","Divider","InputAdornment","Paper","Typography","Box","EmailIcon","LockIcon","PersonIcon","makeStyles","Field","Form","Formik","TextField","useRouter","React","useState","Suspense","useEffect","useAuth","api","CircularLoaderWrapper","useSnackbar","Link","logo","yup","useStyles","root","display","flexDirection","height","width","justifyContent","alignItems","loginTitle","textAlign","logoText","margin","formPaper","maxWidth","padding","loginButton","marginTop","divider","links","link","textDecoration","cursor","fontSize","busCard","borderRadius","boxShadow","color","letterSpacing","backgroundColor","validationSchema","object","shape","username","string","required","password","LoginForm","classes","endAdornment","LoginPage","router","loading","setLoading","openSnackbar","handleSubmit","values","resetForm","push","fontWeight"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Divider,\n    InputAdornment,\n    Paper,\n    Typography,\n    Box,\n} from '@material-ui/core';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/styles';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { useRouter } from 'next/router';\nimport React, { useState, Suspense, useEffect } from 'react';\nimport { useAuth } from '../context/authContext';\nimport api from '../lib/api';\nimport { CircularLoaderWrapper } from '../components/loader/CircularLoader';\nimport { useSnackbar } from '../lib/context';\nimport Link from 'next/link';\nimport logo from '../assets/img/logo.jpg';\nimport * as yup from 'yup';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '80vh',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    loginTitle: {\n        textAlign: 'center',\n    },\n    logoText: {\n        margin: 20,\n    },\n    formPaper: {\n        // display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        width: '80%',\n        maxWidth: 600,\n        height: 'fit-content',\n        padding: 35,\n        margin: 20,\n    },\n    loginButton: {\n        marginTop: 12,\n        width: 120,\n    },\n    divider: {\n        marginTop: 12,\n    },\n    links: {\n        display: 'flex',\n        // justifyContent: 'space-between', \n        justifyContent: 'flex-end',\n        marginTop: 8,\n    },\n    link: {\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        fontSize: 14,\n    },\n    busCard: {\n        maxWidth: '400px',\n        padding: '1em',\n        borderRadius: '5px',\n        boxShadow: '0 2px 6px 1px #bbbbde',\n        color: 'white',\n        letterSpacing: '1px',\n        fontSize: '17px',\n        margin: '0 auto 0.5em auto',\n        // background: 'linear-gradient(to right,#474775, #6d6d90)',\n        backgroundColor: '#3f0f3f',\n        cursor: 'pointer',\n    },\n});\n\nconst validationSchema = yup.object().shape({\n    username: yup.string().required('UserName is required.'),\n    password: yup.string().required('Password is required.'),\n});\n\nfunction LoginForm() {\n    const classes = useStyles();\n\n    return (\n        <Form>\n            <Field\n                name=\"username\"\n                component={TextField}\n                label=\"Username\"\n                margin=\"normal\"\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <PersonIcon color=\"secondary\" />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth\n            />\n            <Field\n                name=\"password\"\n                type=\"password\"\n                component={TextField}\n                label=\"Password\"\n                margin=\"normal\"\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <LockIcon color=\"secondary\" />\n                        </InputAdornment>\n                    ),\n                }}\n                fullWidth\n            />\n            <Button\n                className={classes.loginButton}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n            >\n                Login\n            </Button>\n        </Form>\n    );\n}\n\nfunction LoginPage() {\n    const router = useRouter();\n    const classes = useStyles();\n    // const [state, dispatch] = useAuth();\n    const [loading, setLoading] = useState(false);\n    const { openSnackbar } = useSnackbar();\n\n    async function handleSubmit(values, { resetForm }) {\n        // try {\n        //     setLoading(true);\n        //     let {\n        //         data: { authorizationToken },\n        //     } = await api.post('authentication/login', values);\n            // dispatch({ type: 'UPDATE_USER_TOKEN', payload: authorizationToken });\n            // setBusinesses(business);\n            // localStorage.setItem('authToken', authorizationToken);\n            // setLoading(false);\n            router.push('/dashboard');\n        // } catch (error) {\n        //     openSnackbar('error', error.response.data.errors[0]);\n        //     setLoading(false);\n        //     resetForm();\n        // }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.formPaper}>\n                <Typography className={classes.loginTitle} variant=\"h4\">\n                    All Pros Login\n                </Typography>\n                <Formik\n                    validationSchema={validationSchema}\n                    initialValues={{\n                        username: '',\n                        password: '',\n                    }}\n                    component={LoginForm}\n                    onSubmit={handleSubmit}\n                />\n                <Divider variant=\"fullWidth\" className={classes.divider} />\n\n                <div className={classes.links}>\n                    {/* <Link href=\"/signup\">\n                        <Typography className={classes.link}>\n                            Sign Up\n                        </Typography>\n                    </Link> */}\n                    <Link href=\"/forgotpassword\">\n                        <Typography className={classes.link}>\n                            Forgot Password?\n                        </Typography>\n                    </Link>\n                </div>\n            </Paper>\n            <div style={{ display: 'flex', justifyContent: 'center', fontSize: '1rem' }}>\n                <Link href=\"http://www.kbizzsolutions.com\">\n                    <a style={{ color: 'black', fontWeight: 'bold' }}>\n                        Powered by: K Business Solutions Inc\n            </a>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}