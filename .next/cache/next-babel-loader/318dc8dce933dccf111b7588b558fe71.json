{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\Shrinath\\\\Technoark\\\\allPros\\\\pages\\\\candidates\\\\index.js\";\nvar __jsx = React.createElement;\nimport { Box, Container, IconButton, Typography, Paper } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Table } from '../../components/tables';\nimport Layout from '../../layout';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport api from '../../lib/api';\nimport CircularLoader from '../../components/loader/CircularLoader';\n\nfunction CandidatesPage() {\n  var router = useRouter();\n\n  var _useState = useState([]),\n      customer = _useState[0],\n      setCustomer = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('/customers');\n\n              case 2:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                setCustomer(data);\n                setIsLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  var addCustomer = function addCustomer() {\n    router.push('/customers/add');\n  };\n\n  if (!customer) {\n    return __jsx(Layout, {\n      pageName: \"Customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(CircularLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n  return __jsx(Layout, {\n    pageName: \"Candidates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Box, {\n    padding: 3,\n    clone: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Candidates\"), __jsx(IconButton, {\n    onClick: addCustomer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), __jsx(Box, {\n    padding: 3,\n    clone: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Table, {\n    columns: [{\n      title: 'Name',\n      field: 'companyName'\n    }, {\n      title: 'First Name',\n      field: 'firstName'\n    }, {\n      title: 'Last Name',\n      field: 'lastName'\n    }],\n    data: customer,\n    options: {\n      pageSize: 25,\n      pageSizeOptions: [5, 10, 25, 50, 75, 100],\n      toolbar: true,\n      paging: true,\n      actionsColumnIndex: -1,\n      headerStyle: {\n        backgroundColor: '#3f0f3f',\n        color: '#FFF'\n      }\n    },\n    isLoading: isLoading // data={query =>\n    //   new Promise((resolve, reject) => {\n    //     // let url = 'https://reqres.in/api/users?'\n    //     // url += 'per_page=' + query.pageSize\n    //     // url += '&page=' + (query.page + 1)\n    //     // fetch(url)\n    //     api.get('/customers')\n    //       // .then(response => response.json())\n    //       .then(result => {\n    //         resolve({\n    //           data: result.data,\n    //           page: result.page - 1,\n    //           totalCount: result.total,\n    //         })\n    //       })\n    //   })\n    // }\n    ,\n    actions: [{\n      icon: function icon() {\n        return __jsx(EditIcon, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      },\n      tooltip: 'Edit Customer',\n      onClick: function onClick(event, rowData) {\n        router.push(\"/customers/edit/[id]\", \"/customers/edit/\".concat(rowData.id));\n      }\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))))));\n}\n\nexport default CandidatesPage;","map":{"version":3,"sources":["F:\\Shrinath\\Technoark\\allPros\\pages\\candidates\\index.js"],"names":["Box","Container","IconButton","Typography","Paper","AddIcon","EditIcon","useRouter","React","Table","Layout","useEffect","useState","api","CircularLoader","CandidatesPage","router","customer","setCustomer","isLoading","setIsLoading","fetchData","get","data","addCustomer","push","title","field","pageSize","pageSizeOptions","toolbar","paging","actionsColumnIndex","headerStyle","backgroundColor","color","icon","tooltip","onClick","event","rowData","id"],"mappings":"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","sourcesContent":["import { Box, Container, IconButton, Typography, Paper } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport { Table } from '../../components/tables';\r\nimport Layout from '../../layout';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport api from '../../lib/api';\r\nimport CircularLoader from '../../components/loader/CircularLoader';\r\n\r\nfunction CandidatesPage() {\r\n  const router = useRouter();\r\n  const [customer, setCustomer] = useState([]);\r\n  const [isLoading,setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await api.get('/customers');\r\n      setCustomer(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const addCustomer = () => {\r\n    router.push('/customers/add');\r\n  };\r\n\r\n  if (!customer) {\r\n    return <Layout pageName=\"Customer\"><CircularLoader /></Layout>\r\n  }\r\n\r\n  return (\r\n    <Layout pageName=\"Candidates\">\r\n      <Container>\r\n        <Box\r\n          padding={3}\r\n          clone\r\n        >\r\n          <Paper>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              marginBottom={3}\r\n            >\r\n              <Typography variant=\"h5\">\r\n                Candidates\r\n              </Typography>\r\n              <IconButton onClick={addCustomer}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Box>\r\n            <Box padding={3} clone>\r\n              <Table\r\n                columns={[\r\n                  { title: 'Name', field: 'companyName' },\r\n                  { title: 'First Name', field: 'firstName' },\r\n                  { title: 'Last Name', field: 'lastName' },\r\n                ]}\r\n                data={customer}\r\n                options={{\r\n                  pageSize: 25,\r\n                  pageSizeOptions: [ 5, 10, 25, 50 , 75, 100 ],\r\n                  toolbar: true,\r\n                  paging: true,\r\n                  actionsColumnIndex:-1,\r\n                  headerStyle: {\r\n                    backgroundColor: '#3f0f3f',\r\n                    color: '#FFF'\r\n                  }\r\n                }}\r\n                isLoading={isLoading}\r\n                // data={query =>\r\n                //   new Promise((resolve, reject) => {\r\n                //     // let url = 'https://reqres.in/api/users?'\r\n                //     // url += 'per_page=' + query.pageSize\r\n                //     // url += '&page=' + (query.page + 1)\r\n                //     // fetch(url)\r\n                //     api.get('/customers')\r\n                //       // .then(response => response.json())\r\n                //       .then(result => {\r\n                //         resolve({\r\n                //           data: result.data,\r\n                //           page: result.page - 1,\r\n                //           totalCount: result.total,\r\n                //         })\r\n                //       })\r\n                //   })\r\n                // }\r\n                actions={[\r\n                  {\r\n                    icon: () => <EditIcon color=\"primary\" />,\r\n                    tooltip: 'Edit Customer',\r\n                    onClick: (event, rowData) => {\r\n                      router.push(`/customers/edit/[id]`, `/customers/edit/${rowData.id}`);\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default CandidatesPage;\r\n"]},"metadata":{},"sourceType":"module"}