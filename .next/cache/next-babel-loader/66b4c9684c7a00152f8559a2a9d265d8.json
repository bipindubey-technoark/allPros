{"ast":null,"code":"var _jsxFileName = \"F:\\\\Shrinath\\\\Technoark\\\\allPros\\\\components\\\\charts\\\\LineChart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { ResponsiveLine } from '@nivo/line';\nexport const MyResponsiveLine = props => __jsx(ResponsiveLine, {\n  data: props.data,\n  margin: {\n    top: 50,\n    right: 110,\n    bottom: 50,\n    left: 60\n  },\n  xScale: {\n    type: 'point'\n  },\n  yScale: {\n    type: 'linear',\n    stacked: true,\n    min: 'auto',\n    max: 'auto'\n  },\n  axisTop: null,\n  axisRight: null,\n  axisBottom: {\n    orient: 'bottom',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: props.xLabel,\n    legendOffset: 36,\n    legendPosition: 'middle'\n  },\n  axisLeft: {\n    orient: 'left',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: props.yLabel,\n    legendOffset: -40,\n    legendPosition: 'middle'\n  },\n  colors: {\n    scheme: 'nivo'\n  },\n  pointSize: 10,\n  pointColor: {\n    theme: 'background'\n  },\n  pointBorderWidth: 2,\n  pointBorderColor: {\n    from: 'serieColor'\n  },\n  pointLabel: \"y\",\n  pointLabelYOffset: -12,\n  useMesh: true,\n  legends: [{\n    anchor: 'bottom-right',\n    direction: 'column',\n    justify: false,\n    translateX: 100,\n    translateY: 0,\n    itemsSpacing: 0,\n    itemDirection: 'left-to-right',\n    itemWidth: 80,\n    itemHeight: 20,\n    itemOpacity: 0.75,\n    symbolSize: 12,\n    symbolShape: 'circle',\n    symbolBorderColor: 'rgba(0, 0, 0, .5)',\n    effects: [{\n      on: 'hover',\n      style: {\n        itemBackground: 'rgba(0, 0, 0, .03)',\n        itemOpacity: 1\n      }\n    }]\n  }],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3\n  },\n  __self: this\n});","map":{"version":3,"sources":["F:\\Shrinath\\Technoark\\allPros\\components\\charts\\LineChart.js"],"names":["ResponsiveLine","MyResponsiveLine","props","data","top","right","bottom","left","type","stacked","min","max","orient","tickSize","tickPadding","tickRotation","legend","xLabel","legendOffset","legendPosition","yLabel","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,YAA/B;AACA,OAAO,MAAMC,gBAAgB,GAAGC,KAAK,IACnC,MAAC,cAAD;AACE,EAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,EAAA,MAAM,EAAE;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,GAAlB;AAAuBC,IAAAA,MAAM,EAAE,EAA/B;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GAFV;AAGE,EAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAHV;AAIE,EAAA,MAAM,EAAE;AAAEA,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,OAAO,EAAE,IAA3B;AAAiCC,IAAAA,GAAG,EAAE,MAAtC;AAA8CC,IAAAA,GAAG,EAAE;AAAnD,GAJV;AAKE,EAAA,OAAO,EAAE,IALX;AAME,EAAA,SAAS,EAAE,IANb;AAOE,EAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,QADE;AAEVC,IAAAA,QAAQ,EAAE,CAFA;AAGVC,IAAAA,WAAW,EAAE,CAHH;AAIVC,IAAAA,YAAY,EAAE,CAJJ;AAKVC,IAAAA,MAAM,EAAEd,KAAK,CAACe,MALJ;AAMVC,IAAAA,YAAY,EAAE,EANJ;AAOVC,IAAAA,cAAc,EAAE;AAPN,GAPd;AAgBE,EAAA,QAAQ,EAAE;AACRP,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,QAAQ,EAAE,CAFF;AAGRC,IAAAA,WAAW,EAAE,CAHL;AAIRC,IAAAA,YAAY,EAAE,CAJN;AAKRC,IAAAA,MAAM,EAAEd,KAAK,CAACkB,MALN;AAMRF,IAAAA,YAAY,EAAE,CAAC,EANP;AAORC,IAAAA,cAAc,EAAE;AAPR,GAhBZ;AAyBE,EAAA,MAAM,EAAE;AAAEE,IAAAA,MAAM,EAAE;AAAV,GAzBV;AA0BE,EAAA,SAAS,EAAE,EA1Bb;AA2BE,EAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GA3Bd;AA4BE,EAAA,gBAAgB,EAAE,CA5BpB;AA6BE,EAAA,gBAAgB,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GA7BpB;AA8BE,EAAA,UAAU,EAAC,GA9Bb;AA+BE,EAAA,iBAAiB,EAAE,CAAC,EA/BtB;AAgCE,EAAA,OAAO,EAAE,IAhCX;AAiCE,EAAA,OAAO,EAAE,CACP;AACEC,IAAAA,MAAM,EAAE,cADV;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,OAAO,EAAE,KAHX;AAIEC,IAAAA,UAAU,EAAE,GAJd;AAKEC,IAAAA,UAAU,EAAE,CALd;AAMEC,IAAAA,YAAY,EAAE,CANhB;AAOEC,IAAAA,aAAa,EAAE,eAPjB;AAQEC,IAAAA,SAAS,EAAE,EARb;AASEC,IAAAA,UAAU,EAAE,EATd;AAUEC,IAAAA,WAAW,EAAE,IAVf;AAWEC,IAAAA,UAAU,EAAE,EAXd;AAYEC,IAAAA,WAAW,EAAE,QAZf;AAaEC,IAAAA,iBAAiB,EAAE,mBAbrB;AAcEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,EAAE,EAAE,OADN;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,oBADX;AAELP,QAAAA,WAAW,EAAE;AAFR;AAFT,KADO;AAdX,GADO,CAjCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADK","sourcesContent":["import { ResponsiveLine } from '@nivo/line';\r\nexport const MyResponsiveLine = props => (\r\n  <ResponsiveLine\r\n    data={props.data}\r\n    margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n    xScale={{ type: 'point' }}\r\n    yScale={{ type: 'linear', stacked: true, min: 'auto', max: 'auto' }}\r\n    axisTop={null}\r\n    axisRight={null}\r\n    axisBottom={{\r\n      orient: 'bottom',\r\n      tickSize: 5,\r\n      tickPadding: 5,\r\n      tickRotation: 0,\r\n      legend: props.xLabel,\r\n      legendOffset: 36,\r\n      legendPosition: 'middle',\r\n    }}\r\n    axisLeft={{\r\n      orient: 'left',\r\n      tickSize: 5,\r\n      tickPadding: 5,\r\n      tickRotation: 0,\r\n      legend: props.yLabel,\r\n      legendOffset: -40,\r\n      legendPosition: 'middle',\r\n    }}\r\n    colors={{ scheme: 'nivo' }}\r\n    pointSize={10}\r\n    pointColor={{ theme: 'background' }}\r\n    pointBorderWidth={2}\r\n    pointBorderColor={{ from: 'serieColor' }}\r\n    pointLabel=\"y\"\r\n    pointLabelYOffset={-12}\r\n    useMesh={true}\r\n    legends={[\r\n      {\r\n        anchor: 'bottom-right',\r\n        direction: 'column',\r\n        justify: false,\r\n        translateX: 100,\r\n        translateY: 0,\r\n        itemsSpacing: 0,\r\n        itemDirection: 'left-to-right',\r\n        itemWidth: 80,\r\n        itemHeight: 20,\r\n        itemOpacity: 0.75,\r\n        symbolSize: 12,\r\n        symbolShape: 'circle',\r\n        symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n        effects: [\r\n          {\r\n            on: 'hover',\r\n            style: {\r\n              itemBackground: 'rgba(0, 0, 0, .03)',\r\n              itemOpacity: 1,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ]}\r\n  />\r\n);\r\n"]},"metadata":{},"sourceType":"module"}