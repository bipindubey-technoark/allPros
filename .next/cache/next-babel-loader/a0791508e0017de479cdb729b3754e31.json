{"ast":null,"code":"var _jsxFileName = \"/home/bipin/allPros/layout/Header.jsx\";\nvar __jsx = React.createElement;\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import { useRouter } from 'next/router';\n\nimport CustomMenu from '../components/menu/CustomMenu';\nimport api from '../lib/api';\nimport { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useAuth } from '../context/authContext';\nimport { useRouter } from 'next/router';\nconst drawerWidth = 240;\nconst useStyles = makeStyles({\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth\n  },\n  accountIcon: {\n    cursor: 'pointer'\n  },\n  pageTitle: {\n    flexGrow: 1\n  },\n  selectRoot: {\n    padding: '0.5em 3em 0.5em 1em'\n  }\n});\n\nfunction Header(props) {\n  const {\n    pageName\n  } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: businesses,\n    1: setBusinesses\n  } = useState();\n  const {\n    0: header,\n    1: setHeader\n  } = useState(\"\");\n\n  async function fetchAllBusiness() {\n    const {\n      data\n    } = await api.get('business');\n    setBusinesses(data);\n  }\n\n  const [{\n    businessId\n  }, dispatch] = useAuth();\n  useEffect(() => {\n    fetchAllBusiness();\n    setHeader(businessId);\n  }, []);\n\n  const handleChange = async event => {\n    try {\n      let {\n        data: {\n          authorization\n        }\n      } = await api.get(`business/token/${event.target.value}`);\n      dispatch({\n        type: 'UPDATE_BUSINESS_TOKEN',\n        payload: authorization\n      });\n      localStorage.setItem('authToken', authorization);\n      dispatch({\n        type: 'UPDATE_BUSINESS_ID',\n        payload: event.target.value\n      });\n      setHeader(event.target.value);\n      router.push(`/dashboard`);\n    } catch (error) {\n      console.log(error);\n    } // router.push(`/businesses/edit/[id]`, `/businesses/edit/${event.target.value}`);\n\n  };\n\n  return __jsx(AppBar, {\n    elevation: 0,\n    className: classes.appBar,\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.pageTitle,\n    variant: \"h5\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, pageName), __jsx(Select, {\n    margin: \"dense\",\n    variant: \"filled\",\n    value: header,\n    onChange: handleChange,\n    style: {\n      color: 'white'\n    },\n    classes: {\n      root: classes.selectRoot\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    value: \"Select\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Select Business\")), businesses && businesses.map(b => __jsx(MenuItem, {\n    key: b.id,\n    value: b.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, b.businessName))), __jsx(CustomMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n}\n\nHeader.propTypes = {\n  pageName: PropTypes.string\n};\nHeader.defaultProps = {\n  pageName: ''\n};\nexport default Header;","map":{"version":3,"sources":["/home/bipin/allPros/layout/Header.jsx"],"names":["AppBar","Toolbar","Typography","makeStyles","React","PropTypes","CustomMenu","api","useState","useEffect","MenuItem","Select","useAuth","useRouter","drawerWidth","useStyles","appBar","width","marginLeft","accountIcon","cursor","pageTitle","flexGrow","selectRoot","padding","Header","props","pageName","classes","router","businesses","setBusinesses","header","setHeader","fetchAllBusiness","data","get","businessId","dispatch","handleChange","event","authorization","target","value","type","payload","localStorage","setItem","push","error","console","log","color","root","map","b","id","businessName","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { useRouter } from 'next/router';\nimport CustomMenu from '../components/menu/CustomMenu';\nimport api from '../lib/api';\nimport { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useAuth } from '../context/authContext';\nimport { useRouter } from 'next/router';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles({\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  accountIcon: {\n    cursor: 'pointer',\n  },\n  pageTitle: {\n    flexGrow: 1,\n  },\n  selectRoot:{\n    padding:'0.5em 3em 0.5em 1em'\n  }\n});\n\nfunction Header(props) {\n  const { pageName } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  const [businesses, setBusinesses] = useState();\n  const [header, setHeader] = useState(\"\");\n\n  async function fetchAllBusiness() {\n    const { data } = await api.get('business');\n    setBusinesses(data);\n  }\n  const [{businessId}, dispatch] = useAuth();\n\n  useEffect(() => {\n    fetchAllBusiness();\n    setHeader(businessId)\n  }, []);\n  const handleChange = async event => {\n    try {\n      let {\n        data: { authorization },\n      } = await api.get(`business/token/${event.target.value}`);\n      dispatch({ type: 'UPDATE_BUSINESS_TOKEN', payload: authorization });\n      localStorage.setItem('authToken', authorization);\n      dispatch({ type: 'UPDATE_BUSINESS_ID', payload: event.target.value });\n      setHeader(event.target.value);\n      router.push(`/dashboard`);\n    } catch (error) {\n      console.log(error);\n    }\n    // router.push(`/businesses/edit/[id]`, `/businesses/edit/${event.target.value}`);\n  };\n\n  return (\n    <AppBar elevation={0} className={classes.appBar} position=\"fixed\">\n      <Toolbar>\n        <Typography className={classes.pageTitle} variant=\"h5\" noWrap>\n          {pageName}\n        </Typography>\n\n        <Select\n          margin=\"dense\"\n          variant=\"filled\"\n          value={header}\n          onChange={handleChange}\n          style={{ color: 'white' }}\n          classes={{ root: classes.selectRoot }}\n        >\n          <MenuItem value=\"Select\" selected>\n            <em>Select Business</em>\n          </MenuItem>\n          {businesses &&\n            businesses.map(b => (\n              <MenuItem key={b.id} value={b.id}>\n                {b.businessName}\n              </MenuItem>\n            ))}\n        </Select>\n        <CustomMenu/>\n        {/* <CustomMenu accountData={accountData} securityData={securityData} /> */}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  pageName: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  pageName: '',\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}